apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.ipfs.name }}-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ipfs.name }}-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.ipfs.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.ipfs.name }}
    spec:
      containers:
      - name: ipfs-kubo
        image: {{ .Values.ipfs.image }} 
          # This command configures the IPFS daemon to allow remote connections and WebUI access.
        command:
          - "/bin/sh"
          - "-c"
          - |
            ipfs init --profile server || echo "IPFS already initialized"
            # Expose the API and Gateway to other containers
            ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001
            ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080
            # Add CORS configuration to allow WebUI access from the browser
            ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '["*"]'
            ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '["PUT", "POST", "GET"]'
            ipfs daemon --migrate=true --routing=dhtclient
        volumeMounts:
        - name: ipfs-data
          mountPath: /data/ipfs
      volumes:
      - name: ipfs-data
        persistentVolumeClaim:
          claimName: ipfs-storage-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.ipfs.name }}-service
  namespace: {{ .Values.namespace }}
spec:
  type: NodePort
  selector:
    app: {{ .Values.ipfs.name }}
  ports:
    # udp
    - name: swarm
      port: 4001
      targetPort: 4001
    # tcp
    - name: api
      port: 5001
      targetPort: 5001
    - name: gateway
      port: 8080
      targetPort: 8080
